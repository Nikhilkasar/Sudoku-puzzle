# Program to remove all whitespaces
import random

l =[]
for i in range(9):
  l.append([0]*9)

#row1 = [6,3,9,5,7,4,1,8,2]
#row2 = [5,4,1,8,2,9,3,7,6]
#row3 = [7,8,2,6,1,3,9,5,4]
#row4 = [1,9,8,4,6,7,5,2,3]
#row5 = [3,6,5,9,8,2,4,1,7]
#row6 = [4,2,7,1,3,5,8,6,9]
#row7 = [9,5,6,7,4,8,2,3,1]
#row8 = [8,1,3,2,9,6,7,4,5]
#row9 = [2,7,4,3,5,1,6,9,8]

#l.append(row1)
#l.append(row2)
#l.append(row3)
#l.append(row4)
#l.append(row5)
#l.append(row6)
#l.append(row7)
#l.append(row8)
#l.append(row9)



for i in range(9):
  for j in range(9):
    l[i][j] = random.randint(1,9)

for list in l:
  print(list)


def SudokuValidator(sudoku_grid):
  for i in range(9):
    for j in range(9):
      if(not columnValidator(sudoku_grid,i,j) or not rowValidator(sudoku_grid,i,j) or not threeByThreeBlockalidator(sudoku_grid,i,j)):
        return False
  return True




def columnValidator(sudoku_grid, row, column):
  current_element = sudoku_grid[row][column]
  for i in range(9):
    if(i==row):
      continue
    if(sudoku_grid[i][column]==current_element):
      return False
  return True
  
  
  
def rowValidator(sudoku_grid, row, column):
  current_element = sudoku_grid[row][column]
  for i in range(9):
    if (i == column):
      continue
    if (sudoku_grid[row][i] == current_element):
      return False
  return True

def threeByThreeBlockalidator(sudoku_grid, row, column):
 startCellMap = {0:0,
                 1:0,
                 2:0,
                 3:3,
                 4:3,
                 5:3,
                 6:6,
                 7:6,
                 8:6}

 blockStartCellRow = startCellMap[row]
 blockStartCellColumn = startCellMap[column]

 current_element = sudoku_grid[row][column]

 for i in range(3):
  for j in range(3):
    if(blockStartCellRow+i==row and blockStartCellColumn+j== column):
      continue
    if(sudoku_grid[blockStartCellRow+i][blockStartCellColumn+j]==current_element):
      return False
 return True

print(SudokuValidator(l))


